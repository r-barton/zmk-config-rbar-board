#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------     --------------------------------------
// |   `  |  1  |  2  |  3  |  4  |  5  |     |  6  |  7  |  8  |  9  |  0  | DEL  |
// |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  ;  |  ENT |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | APOS |
// | ALT  | GUI | LAY2| ESC | SPC | LAY1|     |MINUS| SPC |EQUAL|LBKT |RBKT | BSLH |
                        bindings = <
   &kp GRAVE  &kp N1    &kp N2    &kp N3    &kp N4     &kp N5            &kp N6     &kp N7      &kp N8     &kp N9    &kp N0    &kp DEL
   &kp TAB    &kp Q     &kp W     &kp E     &kp R      &kp T             &kp Y      &kp U       &kp I      &kp O     &kp P     &kp BSPC
   &kp LSHFT  &kp A     &kp S     &kp D     &kp F      &kp G             &kp H      &kp J       &kp K      &kp L     &kp SEMI  &kp RET
   &kp LCTRL  &kp Z     &kp X     &kp C     &kp V      &kp B             &kp N      &kp M       &kp COMMA  &kp DOT   &kp FSLH  &kp APOS
   &kp LALT   &kp LGUI  &mo 2     &kp ESC   &kp SPACE  &mo 1             &kp MINUS  &kp SPACE   &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH
                        >;
                };
                layer_1 {
// -------------------------------------------------          -------------------------------------------------
// | ESC   |  F1   |  F2   |  F3   |  F4   |  F5   |          |  F6   |  F7   |  F8   |  F9   | F10   | F11   |
// | TAB   |       |       |       |       | VOL+  |          | HOME  |       |  UP   |       | END   | F12   |
// | SHFT  |       |       |       |       | VOL-  |          |       | LEFT  | DOWN  | RIGHT |       |       |
// | CTRL  |       |       |       |       | >||   |          |       |       |       |       |       |       |
// | ALT   |       |       |       |       |       |          |       |       |       |       |       |       |
                        bindings = <
   &kp ESC    &kp F1    &kp F2    &kp F3     &kp F4   &kp F5                 &kp F6    &kp F7    &kp F8    &kp F9     &kp F10  &kp F11
   &kp TAB    &trans    &trans    &trans     &trans   &kp C_VOL_UP           &kp HOME  &trans    &kp UP    &trans     &kp END  &kp F12
   &kp LSHFT  &trans    &trans    &trans     &trans   &kp C_VOL_DN           &trans    &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &kp PSCRN
   &kp LCTRL  &trans    &trans    &trans     &trans   &kp C_PP               &trans    &trans    &trans    &trans     &trans   &trans
   &kp LALT   &trans    &trans    &trans     &trans   &trans                 &trans    &trans    &trans    &trans     &trans   &trans
                        >;
                };
                layer_2 {
// -------------------------------------------------          -------------------------------------------------
// |       |  BT 1 | BT 2  | BT 3  | BT 4  | BT 5  |          |       |       |       |       |       |       |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
// |       |BTC ALL|       |       |       |       |          |       |       |       |       |       |       |
// |       |       |       |BT CLR |       |OUT_BLE|          |       |       |       |       |       |       |
// |       |       |       |       |       |       |          |       |       |       |       |       |       |
                        bindings = <
   &trans    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 5           &trans    &trans    &trans   &trans   &trans  &trans
   &trans    &trans         &trans         &trans         &trans         &trans                 &trans    &trans    &trans   &trans   &trans  &trans
   &trans    &bt BT_CLR_ALL &trans         &trans         &trans         &trans                 &trans    &trans    &trans   &trans   &trans  &trans
   &trans    &trans         &trans         &bt BT_CLR     &trans         &out OUT_BLE           &trans    &trans    &trans   &trans   &trans  &trans
   &trans    &trans         &trans         &trans         &trans         &trans                 &trans    &trans    &trans   &trans   &trans  &trans
                        >;
                };
        };
};
